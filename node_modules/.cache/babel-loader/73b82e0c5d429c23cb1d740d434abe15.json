{"ast":null,"code":"var _jsxFileName = \"/Users/ashutoshtripathi/Desktop/BurgerProject/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { useState, Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ingredient_prices = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCounted = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCounted;\n      const priceAddition = ingredient_prices[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchasable(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount !== 0) {\n        const updatedCounted = oldCount - 1;\n        const updatedIngredients = { ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCounted;\n        const priceAddition = ingredient_prices[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceAddition;\n        this.setState({\n          totalPrice: newPrice,\n          ingredients: updatedIngredients\n        });\n        this.updatePurchasable(updatedIngredients);\n      }\n    };\n  }\n\n  updatePurchasable(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  purchaseHandler() {\n    this.setState({\n      purchasing: true\n    });\n  }\n\n  render() {\n    {\n      const disabledInfo = { ...this.state.ingredients\n      };\n\n      for (let key in disabledInfo) {\n        disabledInfo[key] = disabledInfo[key] <= 0;\n      }\n\n      return /*#__PURE__*/_jsxDEV(Aux, {\n        children: [/*#__PURE__*/_jsxDEV(Modal, {\n          show: this.props.pu,\n          children: /*#__PURE__*/_jsxDEV(OrderSummary, {\n            ingredients: this.state.ingredients\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Burger, {\n          ingredients: this.state.ingredients\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(BuildControls, {\n          ingredientsAdded: this.addIngredientHandler,\n          ingredientremoved: this.removeIngredientHandler,\n          disabled: disabledInfo,\n          price: this.state.totalPrice,\n          purchasable: this.state.purchasable,\n          purchasing: this.state.purchasing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/Users/ashutoshtripathi/Desktop/BurgerProject/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","useState","Component","Aux","Burger","BuildControls","Modal","OrderSummary","ingredient_prices","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","addIngredientHandler","type","oldCount","updatedCounted","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchasable","removeIngredientHandler","sum","Object","keys","map","igKey","reduce","el","purchaseHandler","render","disabledInfo","key","props","pu"],"mappings":"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","sourcesContent":["import React, {useState, Component} from 'react'\nimport Aux from '../../hoc/Aux'\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nconst ingredient_prices = {\n    salad : 0.5,\n    cheese : 0.4,\n    meat : 1.3,\n    bacon : 0.7\n};\n\nclass BurgerBuilder extends Component {\n    state = {\n        ingredients:{\n            salad : 0,\n            bacon :0 ,\n            cheese : 0,\n            meat: 0\n        },\n        totalPrice : 4,\n        purchasable : false,\n        purchasing : false\n    }\n\n    updatePurchasable (ingredients)\n    {\n       \n        const sum = Object.keys(ingredients).map(igKey =>{\n            return ingredients[igKey];\n        }).reduce((sum , el) =>{\n            return sum +el;\n\n        },0);\n\n       this.setState({purchasable: sum > 0})\n    }\n\n     purchaseHandler()\n     {\n         this.setState({purchasing : true});\n     }\n\n    addIngredientHandler = (type) =>\n    {\n        const oldCount = this.state.ingredients[type];\n        const updatedCounted  = oldCount + 1;\n        const updatedIngredients =  {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCounted;\n        const priceAddition = ingredient_prices[type];\n        const oldPrice = this.state.totalPrice ;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({\n            totalPrice: newPrice , ingredients : updatedIngredients\n        })\n        this.updatePurchasable(updatedIngredients);\n        \n        \n    }\n    removeIngredientHandler = (type) =>\n    {\n       \n        const oldCount = this.state.ingredients[type];\n        if(oldCount !== 0)\n        {\n\n        \n        const updatedCounted  = oldCount - 1;\n        const updatedIngredients =  {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCounted;\n        const priceAddition = ingredient_prices[type];\n        const oldPrice = this.state.totalPrice ;\n        const newPrice = oldPrice - priceAddition;\n        this.setState({\n            totalPrice: newPrice , ingredients : updatedIngredients\n        })\n        this.updatePurchasable(updatedIngredients);\n    }\n\n     }\n    \n    render() {\n    {\n          const disabledInfo = {\n              ...this.state.ingredients\n          };\n          \n          for(let key in disabledInfo)\n          {\n              disabledInfo[key] = disabledInfo[key] <=0\n          }\n        return (\n            <Aux>\n                <Modal show = {this.props.pu}> \n                    <OrderSummary ingredients = {this.state.ingredients}/>\n                </Modal>\n                <Burger ingredients = {this.state.ingredients}/>\n                <BuildControls \n                   ingredientsAdded = {this.addIngredientHandler}\n                   ingredientremoved = {this.removeIngredientHandler} \n                   disabled = {disabledInfo}\n                   price = {this.state.totalPrice} \n                   purchasable= {this.state.purchasable}\n                   purchasing= {this.state.purchasing} /> \n            </Aux>\n        );\n    }\n}\n}\nexport default BurgerBuilder;\n"]},"metadata":{},"sourceType":"module"}